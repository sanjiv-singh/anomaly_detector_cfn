{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description": "Task 1",
  "Parameters": {
      "KeyName": {
        "Description": "Name of the key pair to use",
        "Type": "String"
      },
      "AnomalyAlertsEmail": {
          "Description": "Email address to be used as endpoint for SNS",
          "Type": "String"
      }
  },
  "Resources": {
    "AppRole" : {
      "Type"  : "AWS::IAM::Role",
      "Properties" : {
          "AssumeRolePolicyDocument" : {
            "Statement" : [ {
                "Effect" : "Allow",
                "Principal" : {
                    "Service" : [ "ec2.amazonaws.com" ]
                },
                "Action" : [ "sts:AssumeRole" ]
          } ]
        },
        "Path" : "/"
      }
    },
    "AppRolePolicies" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
          "PolicyName" : "app-role-policy",
          "PolicyDocument" : {
              "Statement" : [ {
                  "Effect" : "Allow",
                  "Action" : "kinesis:*",
                  "Resource" :  {"Fn::GetAtt": ["Task1KinesisStream", "Arn"]}
              }]
          },
          "Roles" : [ { "Ref" : "AppRole" } ]
      }
    },
    "AppInstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
          "Path" : "/",
          "Roles" : [ { "Ref" : "AppRole" } ]
      }
    },
    "AppSSHSecurityGroup": {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupName": "app-security-group",
        "GroupDescription" : "Allow SSH inbound and outbound traffic",
        "SecurityGroupIngress" : [{"IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "0.0.0.0/0"}]
      }
    },
    "AppInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-0b5eea76982371e91",
        "InstanceType": "t2.micro",
        "KeyName": {"Ref": "KeyName"},
        "IamInstanceProfile": {"Ref": "AppInstanceProfile"},
        "SecurityGroupIds": [{"Ref": "AppSSHSecurityGroup"}]
      }
    },
    "Task1KinesisStream": {
      "Type" : "AWS::Kinesis::Stream",
      "Properties" : {
          "Name" : "m03p02_raw_data_stream",
          "ShardCount": 1
      }
    },
    "Task1DynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "TableName" : "m03p02_anomaly_data",
        "AttributeDefinitions" : [
          {
            "AttributeName" : "deviceid",
            "AttributeType" : "S"   
          },
          {
            "AttributeName" : "timestamp",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "deviceid",
            "KeyType" : "HASH"
          },
          {
            "AttributeName" : "timestamp",
            "KeyType" : "RANGE"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "5",
          "WriteCapacityUnits" : "5"
        }
      }
    },
    "AnomalyAlertsSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "m03p02_anomaly_alerts",
        "Subscription": [  ],
        "TopicName": "m03p02_anomaly_alerts"
      }
    },
    "AnomalyAlertsEmailSubscription" : {
      "Type" : "AWS::SNS::Subscription",
      "Properties" : {
          "Endpoint" : {"Ref": "AnomalyAlertsEmail"},
          "Protocol" : "email",
          "TopicArn" : { "Ref" : "AnomalyAlertsSNSTopic" }
      },
      "DependsOn": "AnomalyAlertsSNSTopic"
    }
  }
} 